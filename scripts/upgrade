#!/bin/bash

source _common.sh
source /usr/share/yunohost/helpers

password=$(ynh_app_setting_get --key=password)

#=================================================
# ENSURE DOWNWARD COMPATIBILITY
#=================================================
ynh_script_progression "Ensuring downward compatibility..."

# If install_dir doesn't exist, create it
#if [ -z "${install_dir/mcrcon:-}" ]; then
#	mkdir -p $install_dir/mcrcon
#fi

# If ram doesn't exist, create it
#if [ -z "${ram:-}" ]; then
#	ram="1024"
#	ynh_app_setting_set --key=ram --value=$ram
#fi

# If server doesn't exist, create it
#if [ -z "${server:-}" ]; then
#	server=vanilla
#	ynh_app_setting_set --key=vanilla --value=$vanilla
#fi

# If gamemode doesn't exist, create it
# FIXMEhelpers2.1: maybe replace with: ynh_app_setting_set_default --key=gamemode --value=survival
if [ -z "${gamemode:-}" ]; then
	gamemode=survival
	ynh_app_setting_set --key=survival --value=$survival
fi

# If level_seed doesn't exist, create it
# FIXMEhelpers2.1: maybe replace with: ynh_app_setting_set_default --key=level_seed --value=""
if [ -z "${level_seed:-}" ]; then
	level_seed=""
	ynh_app_setting_set --key=level_seed --value=$level_seed
fi

# If max_players doesn't exist, create it
# FIXMEhelpers2.1: maybe replace with: ynh_app_setting_set_default --key=max_players --value=20
if [ -z "${max_players:-}" ]; then
	max_players=20
	ynh_app_setting_set --key=max_players --value=$max_players
fi

# If motd doesn't exist, create it
# FIXMEhelpers2.1: maybe replace with: ynh_app_setting_set_default --key=motd --value="A Minecraft Server"
if [ -z "${motd:-}" ]; then
	motd="A Minecraft Server"
	ynh_app_setting_set --key=motd --value=$motd
fi

#=================================================
# STOP SYSTEMD SERVICE
#=================================================
ynh_script_progression "Stopping $app's systemd service..."

ynh_systemctl --service=$app --action=stop --log_path="systemd"

#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================
ynh_script_progression "Upgrading source files..."

ynh_setup_source --dest_dir="$install_dir" --source_id="$server" --keep="ops.txt eula.txt server.properties"

ynh_setup_source --dest_dir="$install_dir/mcrcon" --source_id="mcrcon"

# Set permissions to app files
#REMOVEME? Assuming the install dir is setup using ynh_setup_source, the proper chmod/chowns are now already applied and it shouldn't be necessary to tweak perms | chmod 755 "$install_dir"
#REMOVEME? Assuming the install dir is setup using ynh_setup_source, the proper chmod/chowns are now already applied and it shouldn't be necessary to tweak perms | chmod -R o-rwx "$install_dir"
#REMOVEME? Assuming the install dir is setup using ynh_setup_source, the proper chmod/chowns are now already applied and it shouldn't be necessary to tweak perms | chown -R $app:www-data "$install_dir"
chmod +x "$install_dir/mcrcon/mcrcon"
chmod +x "$install_dir/server.jar"

#=================================================
# SETUP SYSTEMD
#=================================================
ynh_script_progression "Upgrading systemd configuration..."

ynh_config_add_systemd

yunohost service add $app --description="Three-dimensional sandbox construction game" --log="/var/log/$app/$app.log" --needs_exposed_ports="$port"

#=================================================
# START SYSTEMD SERVICE
#=================================================
ynh_script_progression "Starting $app's systemd service..."

ynh_systemctl --service=$app --action=start --log_path=systemd --wait_until="RCON running on"

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression "Upgrade of $app completed"
